dnl **** Process this file with autoconf to produce a configure script.
AC_PREREQ(2.59)
AC_INIT(OpenMD, 1.0, gezelter@nd.edu, openmd)
AC_CONFIG_AUX_DIR(ac-tools)
AC_CONFIG_SRCDIR([src/applications/openmd/openmd.cpp])
AC_CONFIG_HEADER([src/config.h])

builtin(include, ac-tools/OpenMD.m4)
builtin(include, ac-tools/AC_CXX_HAVE_STL.m4)
builtin(include, ac-tools/AC_CXX_NAMESPACES.m4)
builtin(include, ac-tools/AC_CXX_STD.m4)
builtin(include, ac-tools/ax_mpi.m4)

# who am i
AC_CANONICAL_HOST

AC_PREFIX_DEFAULT("/usr/local")

# set program name
PROGNAME="openmd"
AC_SUBST(PROGNAME)

AC_EXEEXT
AC_OBJEXT
OBJEXT=".$OBJEXT"

OPENMD=openmd

dnl **** define home dir of OpenMD
if test "x${prefix}" = "xNONE"
then
  OPENMD_HOME=${ac_default_prefix}/openmd
else
  OPENMD_HOME=${prefix}/openmd
fi
AC_ARG_ENABLE(openmd-home,
[  --enable-openmd-home=DIR      define OpenMD home dir [PREFIX/openmd]],
[OPENMD_HOME="${enableval}"])

# there are two ways to do debugging.  One with the --enable-debug flag
# and one using the DEBUG environment variable

debug=0
AC_ARG_ENABLE(debug, AC_HELP_STRING([--enable-debug], [Compile OpenMD in debug mode]), [debug=1])
if test "${DEBUG}"; then
	AC_DEFINE(debug, 1, [Code compiled in debug mode])
  msg="$msg, debug mode"
fi
AC_SUBST(debug)

AC_ARG_ENABLE(single, [AC_HELP_STRING([--enable-single],[compile OpenMD in single precision])], ok=$enableval, ok=no)
AC_ARG_ENABLE(float, [AC_HELP_STRING([--enable-float],[synonym for --enable-single])], ok=$enableval)
if test "$ok" = "yes"; then
        AC_DEFINE(SINGLE_PRECISION,1,[Define to compile in single precision.])
        USE_SINGLE_PRECISION=yes
        AC_SUBST(USE_SINGLE_PRECISION)
fi

AC_PROG_CXX([$CXX icpc pathCC pgCC c++ xlc++ xlC g++ CC])
AC_PROG_CC([$CC icc pathcc pgcc cc xlc gcc])

save_CXX=$CXX
save_CC=$CC
save_LIBS=$LIBS

AC_LANG([C++])
AC_CHECK_LIB(c, dlopen, LIBDL="", [AC_CHECK_LIB(dl, dlopen, LIBDL="-ldl")])
AC_SUBST(LIBDL)
AX_MPI([USE_MPI="yes"],
       [USE_MPI="no"
       AC_MSG_WARN([No suitable C++ MPI implementation found. openmd_MPI will not be built.])])
AS_IF([test AS_VAR_GET([USE_MPI]) != no],[
AC_LANG([C])
AX_MPI([USE_MPI="yes"],
       [USE_MPI="no"
       AC_MSG_WARN([No suitable C MPI implementation found. openmd_MPI will not be built.])])
])
AS_IF([test AS_VAR_GET([USE_MPI]) != no],[
        CXX=$MPICXX
        CC=$MPICC
        LIBS="$MPILIBS $LIBS"
],[
        CXX=$save_CXX
        CC=$save_CC
        LIBS=$save_LIBS
]
)
AC_SUBST(USE_MPI)

# Checks for programs.
AC_PROG_CPP
AC_PROG_EGREP
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AX_SYS_PERLSHARPBANG
AC_PROG_INSTALL
case "x$INSTALL" in
   x/*) ;;
   *) INSTALL=`pwd`/ac-tools/"shtool install -c" ;
esac
MKINSTALLDIRS=`pwd`/ac-tools/"shtool mkdir -p -f -m 755"
AC_CHECK_PROG(AR, ar, ar, NONE)
if test "$AR" = "NONE"; then
  AC_CACHE_SAVE
  exit 1
fi
AC_PATH_PROG(PS, ps)
AC_CACHE_CHECK([for POSIX or BSD ps syntax], ac_cv_prog_ps_syntax, [
	if $PS ax -o rss > /dev/null 2>&1; then
		ac_cv_prog_ps_ax=yes
	else
		ac_cv_prog_ps_ax=no
	fi
	if $PS -ef -o rss > /dev/null 2>&1; then
		ac_cv_prog_ps_ef=yes
	else
		ac_cv_prog_ps_ef=no
	fi
	if test "$ac_cv_prog_ps_ax" = yes; then
		ac_cv_prog_ps_syntax=BSD
        else
		if test "$ac_cv_prog_ps_ef" = yes; then
			ac_cv_prog_ps_syntax=POSIX
		else
			AC_MSG_ERROR(Could not determine ps syntax)
		fi
	fi
])
AC_DEFINE_UNQUOTED(PSCOMMAND, $PS, [Path to ps program])
if test "$ac_cv_prog_ps_syntax" = BSD; then
  AC_DEFINE(PSTYPE_IS_BSD, 1, [ps uses BSD-style arguments])
else
   if test "$ac_cv_prog_ps_syntax" = POSIX; then
       AC_DEFINE(PSTYPE_IS_POSIX, 1, [ps uses POSIX-style arguments])
   else
       AC_MSG_ERROR(Unknown ps syntax type!)
   fi
fi

AC_LANG_C

dnl Checks for libraries.
AC_CHECK_LIB(m, asin, , exit)
ACX_CHECK_ZLIB
ACX_CHECK_FFTW
ACX_CHECK_QHULL
ACX_CHECK_OPENBABEL

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([libintl.h limits.h machine/hal_sysinfo.h stdlib.h string.h strings.h sys/param.h sys/pstat.h sys/sysctl.h sys/sysinfo.h sys/sysmp.h sys/systemcfg.h sys/table.h sys/time.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T
AC_HEADER_TIME

# Checks for library functions.
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_FUNC_SELECT_ARGTYPES
AC_FUNC_STRTOD
AC_CHECK_FUNCS([floor getpagesize gettimeofday memset pow pstat_getdynamic pstat_getstatic select sqrt strcasecmp strchr strdup stricmp strncasecmp strnicmp strstr strtol sysmp getsysinfo sysctl table])

# special check for _system_configuration because AIX <4.3.2 do not
# contain the `physmem' member.
AC_MSG_CHECKING([for external symbol _system_configuration])
AC_TRY_COMPILE([#include <sys/systemcfg.h>],
               [double x = _system_configuration.physmem;],
  [AC_MSG_RESULT([yes])
  AC_DEFINE(HAVE__SYSTEM_CONFIGURATION, 1,
            [Define if you have the _system_configuration variable.])],
  [AC_MSG_RESULT([no])])

dnl check for strong optimization options

case $debug in
  1) 
     ;;
  *) 
   ACX_PROG_CC_MAXOPT
   ACX_PROG_CXX_MAXOPT
     ;;
esac

BB_ENABLE_DOXYGEN

AC_SUBST(EXEEXT)
AC_SUBST(OBJEXT)
AC_SUBST(BATEXT)
AC_SUBST(MKINSTALLDIRS)
AC_SUBST(OPENMD)
AC_SUBST(OPENMD_HOME)
AC_SUBST(SUBDIRS)
AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)
AC_CONFIG_FILES([make/Makefile src/utils/Makefile src/math/Makefile src/integrators/Makefile src/applications/atom2md/Makefile scripts/filepp], [chmod 0755 scripts/*])

AC_OUTPUT
